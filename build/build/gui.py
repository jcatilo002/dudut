# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import subprocess
import mysql.connector
from mysql.connector import Error


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\jpcat\Downloads\build\build\assets\frame0")

# Connect to the MySQL database
try:
    conn = mysql.connector.connect(
        host="localhost",
        user="root",  
        password="",  
        database="fitness"
    )
    if conn.is_connected():
        cursor = conn.cursor()
        # Create table if it doesn't exist
        cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INT AUTO_INCREMENT PRIMARY KEY,
            username VARCHAR(255) NOT NULL,
            password VARCHAR(255) NOT NULL
        )
        ''')
        conn.commit()
except Error as e:
    print(f"Error: {e}")
    messagebox.showerror("Database Error", f"Error connecting to the database: {e}")
    exit()

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def on_sign_up_button_click():
    username = entry_1.get()
    password = entry_2.get()
    if not username or not password:
        messagebox.showwarning("Warning", "Please fill in all fields")
        return
    cursor.execute("INSERT INTO users (username, password) VALUES (%s, %s)", (username, password))
    conn.commit()
    print(f"Username: {username}")
    messagebox.showinfo("Notification", "Account Created")
    window.destroy()
    subprocess.run(["python", str(OUTPUT_PATH / "dashboard.py")])

def on_log_in_button_click():
    username = entry_1.get()
    password = entry_2.get()
    if not username or not password:
        messagebox.showwarning("Warning", "Please fill in all fields")
        return
    cursor.execute("SELECT * FROM users WHERE username = %s AND password = %s", (username, password))
    user = cursor.fetchone()
    if user:
        print(f"Username: {username}")
        messagebox.showinfo("Notification", "Logged In")
        window.destroy()
        subprocess.run(["python", str(OUTPUT_PATH / "dashboard.py")])
    else:
        messagebox.showerror("Error", "Invalid credentials")

window = Tk()

window.geometry("393x852")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 852,
    width = 393,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    0.0,
    393.0,
    852.0,
    fill="#4E7DBB",
    outline="")

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    201.0,
    516.5,
    image=entry_image_1
)
entry_1 = Entry(
    text="Username",
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=76.5,
    y=483.0,
    width=249.0,
    height=65.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    200.0,
    637.5,
    image=entry_image_2
)
entry_2 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0,
    show="*"
)
entry_2.place(
    x=75.5,
    y=604.0,
    width=249.0,
    height=65.0
)

# Sign Up Button
button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    text="CREATE AN ACCOUNT",
    borderwidth=0,
    highlightthickness=0,
    command=on_sign_up_button_click,
    relief="flat"
)
button_1.place(
    x=120.0,
    y=709.0,
    width=162.0,
    height=67.0
)

# Log In Button
# Ensure the following files exist in the specified directory:
# - button_2.png

# If the file does not exist, you can use a placeholder image or remove the button.
# For example, using button_1.png as a placeholder:
button_image_2 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_2 = Button(
    text="LOG IN",
    borderwidth=0,
    highlightthickness=0,
    command=on_log_in_button_click,
    relief="flat"
)
button_2.place(
    x=120.0,
    y=800.0,
    width=162.0,
    height=67.0
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    196.0,
    235.0,
    image=image_image_1
)
window.resizable(False, False)
window.mainloop()
